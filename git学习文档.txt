Git使用命令
首先，新建一个空文件夹（最好为空文件夹），进行初始化
git init
然后添加文件，进行添加，提交操作
git add file
git commit -m "描述变更内容"
修改文件后，查看git状态
git status
看到文件有变更，可用
git diff file
查看版本变更细节
然后再次添加，查看状态，显示可以提交，进行提交操作
若要进行回退，先查看提交历史-过往版本号
git log 或 git log --pretty=oneline(每个版本只展示一行信息)
版本号为SHA1算出来的commit id（版本号）
版本回退操作
git reset --hard Head^(上一个版本，或Head^^、Head~n，n表示上n个版本)
 
选择一个版本对应的版本号至少前5位，
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id
git reset --hard commit_id 
可前进到对应版本
可使用
git reflog 
命令查看命令历史

工作区和版本库
Git分为工作区和版本库，版本库包含暂存区stage、默认第一个分支master及指向master的指针Head
add操作将文件从工作区添加到暂存区
commit将暂存区文件一次性提交到master

管理修改
Git通过管理修改控制版本：
提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：
$ git diff HEAD -- readme.txt

diff --git a/readme.txt b/readme.txt
index db28b2c..9a8b341 100644
--- a/readme.txt
+++ b/readme.txt
@@ -1,4 +1,4 @@
 Git is a distributed version control system.
 Git is free software distributed under the GPL.
 Git has a mutable index called stage.
-Git tracks changes.
\ No newline at end of file
+Git tracks changes of files.
\ No newline at end of file

撤销修改
撤销工作区命令如下
git checkout -- file可以丢弃工作区的修改（其实是用版本库里的版本替换工作区的版本）
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

撤销暂存区命令如下：
Git同样告诉我们，用命令git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区
操作后显示
$ git reset head readme.txt
Unstaged changes after reset:
M       readme.txt
小结：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，
第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

删除文件
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，
但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。